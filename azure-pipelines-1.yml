# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '2eed50d9-1067-4cf0-afd5-95c7c2ce591c'
  imageRepository: 'myapp'
  containerRegistry: 'challenge.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/codebase/rdicidr-0.1.0/Dockerfile'
  ACR_NAME: "challenge"  # Nombre del Azure Container Registry
  resourceGroup: "FullStackL"  # Nombre del grupo de recursos en Azure
  containerAppEnvName: "proyecto-app-environment"  # Nombre del entorno de Azure Container Apps
  lawID: "6dab0d25-73b8-465f-ad46-0cdaa4e95387"  # ID del Log Analytics Workspace (LAW) de Azure
  location: "eastus"  # Región de Azure donde se desplegarán los recursos
  ACR_LOGIN_SERVER: "$(ACR_NAME).azurecr.io"  # URL del Azure Container Registry

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:  
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure for Students(2)(0095e18a-d16b-49ce-a344-9fd1269979fb)'  # Suscripción de Azure for Students
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          ACR_USERNAME=$(az acr credential show --name $(ACR_NAME) --query "username" -o tsv)
          ACR_PASSWORD=$(az acr credential show --name $(ACR_NAME) --query "passwords[0].value" -o tsv)
          echo "##vso[task.setvariable variable=ACR_USERNAME]$ACR_USERNAME"
          echo "##vso[task.setvariable variable=ACR_PASSWORD]$ACR_PASSWORD"
      displayName: 'Get ACR Credentials'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure for Students(2)(0095e18a-d16b-49ce-a344-9fd1269979fb)'  # Suscripción de Azure for Students
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login --name $(ACR_NAME)'
      displayName: 'Login to Azure Container Registry (ACR)'

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/codebase/rdicidr-0.1.0/Dockerfile'
        tags: 'latest'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'Azure for Students(2)(0095e18a-d16b-49ce-a344-9fd1269979fb)'  # Suscripción de Azure for Students
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az containerapp create \
            --name backend-test \
            --resource-group $(resourceGroup) \
            --environment $(containerAppEnvName) \
            --image $(ACR_LOGIN_SERVER)/myapp:latest \
            --target-port 8080 \
            --ingress external \
            --cpu 0.5 \
            --memory 1.0Gi \
            --registry-server $(ACR_LOGIN_SERVER) \
            --registry-username $(ACR_USERNAME) \
            --registry-password $(ACR_PASSWORD)
      displayName: 'Deploy to Azure Container Apps'
